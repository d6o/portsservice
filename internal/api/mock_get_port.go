// Code generated by MockGen. DO NOT EDIT.
// Source: get_port.go

// Package api is a generated GoMock package.
package api

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockresponder is a mock of responder interface.
type Mockresponder struct {
	ctrl     *gomock.Controller
	recorder *MockresponderMockRecorder
}

// MockresponderMockRecorder is the mock recorder for Mockresponder.
type MockresponderMockRecorder struct {
	mock *Mockresponder
}

// NewMockresponder creates a new mock instance.
func NewMockresponder(ctrl *gomock.Controller) *Mockresponder {
	mock := &Mockresponder{ctrl: ctrl}
	mock.recorder = &MockresponderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockresponder) EXPECT() *MockresponderMockRecorder {
	return m.recorder
}

// WriteBadRequest mocks base method.
func (m *Mockresponder) WriteBadRequest(ctx context.Context, w http.ResponseWriter, msg string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteBadRequest", ctx, w, msg)
}

// WriteBadRequest indicates an expected call of WriteBadRequest.
func (mr *MockresponderMockRecorder) WriteBadRequest(ctx, w, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteBadRequest", reflect.TypeOf((*Mockresponder)(nil).WriteBadRequest), ctx, w, msg)
}

// WriteInternalServerError mocks base method.
func (m *Mockresponder) WriteInternalServerError(ctx context.Context, w http.ResponseWriter, msg string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteInternalServerError", ctx, w, msg)
}

// WriteInternalServerError indicates an expected call of WriteInternalServerError.
func (mr *MockresponderMockRecorder) WriteInternalServerError(ctx, w, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteInternalServerError", reflect.TypeOf((*Mockresponder)(nil).WriteInternalServerError), ctx, w, msg)
}

// WriteNotFound mocks base method.
func (m *Mockresponder) WriteNotFound(ctx context.Context, w http.ResponseWriter) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteNotFound", ctx, w)
}

// WriteNotFound indicates an expected call of WriteNotFound.
func (mr *MockresponderMockRecorder) WriteNotFound(ctx, w interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteNotFound", reflect.TypeOf((*Mockresponder)(nil).WriteNotFound), ctx, w)
}

// WriteOK mocks base method.
func (m *Mockresponder) WriteOK(ctx context.Context, w http.ResponseWriter, result any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteOK", ctx, w, result)
}

// WriteOK indicates an expected call of WriteOK.
func (mr *MockresponderMockRecorder) WriteOK(ctx, w, result interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteOK", reflect.TypeOf((*Mockresponder)(nil).WriteOK), ctx, w, result)
}
